<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.pitest</groupId>
    <organization><name>org.pitest</name></organization>
    <artifactId>pitest-parent</artifactId>
    <packaging>pom</packaging>
    <version>1.1.6-SNAPSHOT</version>
    <name>pitest-parent</name>
    <url>http://pitest.org</url>
    <description>Mutation testing system for java - parent project</description>
    <scm>
        <url>https://github.com/hcoles/pitest</url>
        <connection>scm:git:git@github.com:hcoles/pitest.git</connection>
        <developerConnection>scm:git:git@github.com:hcoles/pitest.git</developerConnection>
    </scm>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <issueManagement>
        <url>https://github.com/hcoles/pitest/issues</url>
        <system>GitHub</system>
    </issueManagement>

    <developers>
        <developer>
            <id>henry</id>
            <name>Henry Coles</name>
            <email>henry@pitest.org</email>
        </developer>
    </developers>

    <contributors>
        <contributor>
            <name>Marvin H Froeder</name>
            <email>velo dot br at gmail dot com</email>
            <url>about.me/velo</url>
        </contributor>
        <contributor>
            <name>Rahul Gopinath</name>
            <email>rahul@gopinath.org</email>
            <url>http://rahul.gopinath.org</url>
        </contributor>
    </contributors>

    <modules>
        <module>pitest-maven</module>
        <module>pitest</module>
        <module>pitest-ant</module>
        <module>pitest-command-line</module>
        <module>pitest-html-report</module>
        <module>pitest-maven-verification</module>
    </modules>

       <profiles>
        <profile>
            <id>java8</id>
            <!-- can only verify java 8 when running with java 8. Would be preferable to allways make
                 this check using maven toolchains, but need to see if cloudbees can support this -->
            <activation>
                <jdk>1.8</jdk>
            </activation>
            <modules>
                <module>pitest-java8-verification</module>
                <module>pitest-groovy-verification</module>
            </modules>
        </profile>
        <profile>
            <id>java7</id>
            <!-- Exclude Groovy verification for 1.6 as it has 7+ dependencies  -->
            <activation>
                <jdk>1.7</jdk>
            </activation>
            <modules>
                <module>pitest-groovy-verification</module>
            </modules>
        </profile>
        <profile>
            <id>release-sign-artifacts</id>
            <activation>
                <property>
                    <name>performRelease</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <!-- common dependencies used in all subprojects -->
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.9.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>1.6.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.pitest.quickbuilder</groupId>
			<artifactId>quickbuilder</artifactId>
			<version>1.2</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

    <build>
	<plugins>
	       <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
   <version>2.9.1</version>
    <executions>
        <execution>
        <id>checkstyle</id>
        <phase>validate</phase>
        <goals>
            <goal>check</goal>
        </goals>
        <configuration>
            <failOnViolation>true</failOnViolation>
            <configLocation>checkstyle.xml</configLocation>
        </configuration>
        </execution>
    </executions>
    </plugin>
        <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>animal-sniffer-maven-plugin</artifactId>
            <version>1.14</version>
            <executions>
                <execution>
                    <id>enforce-java-api-compatibility</id>
                    <phase>validate</phase>
                    <goals>
                        <goal>check</goal>
                    </goals>
                    <configuration>
                        <signature>
                            <groupId>org.codehaus.mojo.signature</groupId>
                            <artifactId>java16</artifactId>
                            <version>1.1</version>
                        </signature>
                        <skip>false</skip>
                    </configuration>
                </execution>
            </executions>
        </plugin>
        </plugins>

    <!-- specification of versions of all plugins used in any module
        also common configuration is specified there
        (but module-specific stuff is specified in other pom.xml files) -->
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>2.4</version>
                    <configuration>
                        <source>1.6</source>
                        <target>1.6</target>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${surefire.version}</version>
                    <dependencies>
	                    <dependency>
	                        <groupId>org.apache.maven.surefire</groupId>
	                        <artifactId>surefire-junit47</artifactId>
	                        <version>${surefire.version}</version>
	                    </dependency>
	                </dependencies>
                    <configuration>
                        <testNGArtifactName>none:none</testNGArtifactName>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>1.7</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>2.8.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>2.1.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>2.4</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>1.6</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>1.4</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>2.3</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>

    <!-- versions of libraries which are used in different projects or which are used for few artifacts -->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <asm.version>5.0.3</asm.version>
        <ant.version>1.8.3</ant.version>
        <hamcrest.version>1.3</hamcrest.version>
        <junit.version>4.11</junit.version>
        <powermock.version>1.5.3-SNAPSHOT</powermock.version>
        <surefire.version>2.16</surefire.version>
        <testng.version>6.1.1</testng.version>
    </properties>

</project>
